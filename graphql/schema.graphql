"A date string with format `Y-m-d`, e.g. `2018-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    me: User @auth
    orders: [Order!]! @paginate(defaultCount: 10)
    products: [Product!]! @all
    showCart(user: Int!): [Product!] @guard
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)
}

type Mutation {
    login(email: String! password: String!): User!
    logout: User @guard
    addProductToCart: Order! @guard
    removeProductFromCart(product: Int!): [Product!] @guard
}

type User {
    id: ID!
    name: String!
    email: String!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
    orders: [Order!]! @hasMany
}

type Product {
    id: ID!
    name: String!
    description: String!
    price: Int!
    created_at: DateTime!
    updated_at: DateTime!
}

type Order {
    id: ID!
    total: Int!
    created_at: DateTime!
    updated_at: DateTime!
    user: User! @belongsTo
    products: [Product!]! @belongsToMany
}
